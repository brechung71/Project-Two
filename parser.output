Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';'

    3 optional_variable: optional_variable variable
    4                  | /* empty */

    5 variable: IDENTIFIER ':' type IS statement_

    6 optional_parameter: optional_parameter parameter
    7                   | /* empty */

    8 parameter: IDENTIFIER ':' type

    9 type: INTEGER
   10     | REAL
   11     | BOOLEAN

   12 body: BEGIN_ statement_ END ';'

   13 statement_: statement ';'
   14           | error ';'

   15 statement: expression
   16          | REDUCE operator reductions ENDREDUCE
   17          | IF expression THEN statement_ ELSE statement_ ENDIF
   18          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE

   19 reductions: reductions statement_
   20           | /* empty */

   21 optional_cases: optional_cases case
   22               | /* empty */

   23 case: WHEN INT_LITERAL ARROW statement_

   24 operator: EXPOP
   25         | MULOP REMOP
   26         | ADDOP
   27         | RELOP
   28         | ANDOP
   29         | OROP

   30 expression: expression ANDOP relation
   31           | expression OROP relation
   32           | relation

   33 relation: relation RELOP term
   34         | term

   35 term: term ADDOP factor
   36     | factor

   37 factor: factor MULOP primary
   38       | factor REMOP
   39       | exponent

   40 exponent: factor EXPOP primary
   41         | primary

   42 primary: '(' expression ')'
   43        | NOT
   44        | INT_LITERAL
   45        | REAL_LITERAL
   46        | BOOL_LITERAL
   47        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 42
')' (41) 42
':' (58) 5 8
';' (59) 2 12 13 14
error (256) 14
IDENTIFIER (258) 2 5 8 47
INT_LITERAL (259) 23 44
REAL_LITERAL (260) 45
BOOL_LITERAL (261) 46
ADDOP (262) 26 35
MULOP (263) 25 37
RELOP (264) 27 33
OROP (265) 29 31
ANDOP (266) 28 30
EXPOP (267) 24 40
REMOP (268) 25 38
BEGIN_ (269) 12
BOOLEAN (270) 11
END (271) 12
ENDREDUCE (272) 16
FUNCTION (273) 2
INTEGER (274) 9
IS (275) 5 18
REDUCE (276) 16
RETURNS (277) 2
CASE (278) 18
ELSE (279) 17
ARROW (280) 18 23
ENDCASE (281) 18
ENDIF (282) 17
IF (283) 17
OTHERS (284) 18
REAL (285) 10
THEN (286) 17
WHEN (287) 23
NOT (288) 43


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
function (39)
    on left: 1, on right: 0
function_header (40)
    on left: 2, on right: 1
optional_variable (41)
    on left: 3 4, on right: 1 3
variable (42)
    on left: 5, on right: 3
optional_parameter (43)
    on left: 6 7, on right: 2 6
parameter (44)
    on left: 8, on right: 6
type (45)
    on left: 9 10 11, on right: 2 5 8
body (46)
    on left: 12, on right: 1
statement_ (47)
    on left: 13 14, on right: 5 12 17 18 19 23
statement (48)
    on left: 15 16 17 18, on right: 13
reductions (49)
    on left: 19 20, on right: 16 19
optional_cases (50)
    on left: 21 22, on right: 18 21
case (51)
    on left: 23, on right: 21
operator (52)
    on left: 24 25 26 27 28 29, on right: 16
expression (53)
    on left: 30 31 32, on right: 15 17 18 30 31 42
relation (54)
    on left: 33 34, on right: 30 31 32 33
term (55)
    on left: 35 36, on right: 33 34 35
factor (56)
    on left: 37 38 39, on right: 35 36 37 38 40
exponent (57)
    on left: 40 41, on right: 39
primary (58)
    on left: 42 43 44 45 46 47, on right: 37 40 41


state 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


state 1

    2 function_header: FUNCTION . IDENTIFIER optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: function . $end

    $end  shift, and go to state 5


state 3

    1 function: function_header . optional_variable body

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 6


state 4

    2 function_header: FUNCTION IDENTIFIER . optional_parameter RETURNS type ';'

    $default  reduce using rule 7 (optional_parameter)

    optional_parameter  go to state 7


state 5

    0 $accept: function $end .

    $default  accept


state 6

    1 function: function_header optional_variable . body
    3 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 8
    BEGIN_      shift, and go to state 9

    variable  go to state 10
    body      go to state 11


state 7

    2 function_header: FUNCTION IDENTIFIER optional_parameter . RETURNS type ';'
    6 optional_parameter: optional_parameter . parameter

    IDENTIFIER  shift, and go to state 12
    RETURNS     shift, and go to state 13

    parameter  go to state 14


state 8

    5 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 15


state 9

   12 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 26
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 10

    3 optional_variable: optional_variable variable .

    $default  reduce using rule 3 (optional_variable)


state 11

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


state 12

    8 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 34


state 13

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS . type ';'

    BOOLEAN  shift, and go to state 35
    INTEGER  shift, and go to state 36
    REAL     shift, and go to state 37

    type  go to state 38


state 14

    6 optional_parameter: optional_parameter parameter .

    $default  reduce using rule 6 (optional_parameter)


state 15

    5 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 35
    INTEGER  shift, and go to state 36
    REAL     shift, and go to state 37

    type  go to state 39


state 16

   14 statement_: error . ';'

    ';'  shift, and go to state 40


state 17

   47 primary: IDENTIFIER .

    $default  reduce using rule 47 (primary)


state 18

   44 primary: INT_LITERAL .

    $default  reduce using rule 44 (primary)


state 19

   45 primary: REAL_LITERAL .

    $default  reduce using rule 45 (primary)


state 20

   46 primary: BOOL_LITERAL .

    $default  reduce using rule 46 (primary)


state 21

   16 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 41
    MULOP  shift, and go to state 42
    RELOP  shift, and go to state 43
    OROP   shift, and go to state 44
    ANDOP  shift, and go to state 45
    EXPOP  shift, and go to state 46

    operator  go to state 47


state 22

   18 statement: CASE . expression IS optional_cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    expression  go to state 48
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 23

   17 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    expression  go to state 49
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 24

   43 primary: NOT .

    $default  reduce using rule 43 (primary)


state 25

   42 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    expression  go to state 50
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 26

   12 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 51


state 27

   13 statement_: statement . ';'

    ';'  shift, and go to state 52


state 28

   15 statement: expression .
   30 expression: expression . ANDOP relation
   31           | expression . OROP relation

    OROP   shift, and go to state 53
    ANDOP  shift, and go to state 54

    $default  reduce using rule 15 (statement)


state 29

   32 expression: relation .
   33 relation: relation . RELOP term

    RELOP  shift, and go to state 55

    $default  reduce using rule 32 (expression)


state 30

   34 relation: term .
   35 term: term . ADDOP factor

    ADDOP  shift, and go to state 56

    $default  reduce using rule 34 (relation)


state 31

   36 term: factor .
   37 factor: factor . MULOP primary
   38       | factor . REMOP
   40 exponent: factor . EXPOP primary

    MULOP  shift, and go to state 57
    EXPOP  shift, and go to state 58
    REMOP  shift, and go to state 59

    $default  reduce using rule 36 (term)


state 32

   39 factor: exponent .

    $default  reduce using rule 39 (factor)


state 33

   41 exponent: primary .

    $default  reduce using rule 41 (exponent)


state 34

    8 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 35
    INTEGER  shift, and go to state 36
    REAL     shift, and go to state 37

    type  go to state 60


state 35

   11 type: BOOLEAN .

    $default  reduce using rule 11 (type)


state 36

    9 type: INTEGER .

    $default  reduce using rule 9 (type)


state 37

   10 type: REAL .

    $default  reduce using rule 10 (type)


state 38

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type . ';'

    ';'  shift, and go to state 61


state 39

    5 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 62


state 40

   14 statement_: error ';' .

    $default  reduce using rule 14 (statement_)


state 41

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


state 42

   25 operator: MULOP . REMOP

    REMOP  shift, and go to state 63


state 43

   27 operator: RELOP .

    $default  reduce using rule 27 (operator)


state 44

   29 operator: OROP .

    $default  reduce using rule 29 (operator)


state 45

   28 operator: ANDOP .

    $default  reduce using rule 28 (operator)


state 46

   24 operator: EXPOP .

    $default  reduce using rule 24 (operator)


state 47

   16 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 20 (reductions)

    reductions  go to state 64


state 48

   18 statement: CASE expression . IS optional_cases OTHERS ARROW statement_ ENDCASE
   30 expression: expression . ANDOP relation
   31           | expression . OROP relation

    OROP   shift, and go to state 53
    ANDOP  shift, and go to state 54
    IS     shift, and go to state 65


state 49

   17 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . ANDOP relation
   31           | expression . OROP relation

    OROP   shift, and go to state 53
    ANDOP  shift, and go to state 54
    THEN   shift, and go to state 66


state 50

   30 expression: expression . ANDOP relation
   31           | expression . OROP relation
   42 primary: '(' expression . ')'

    OROP   shift, and go to state 53
    ANDOP  shift, and go to state 54
    ')'    shift, and go to state 67


state 51

   12 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 68


state 52

   13 statement_: statement ';' .

    $default  reduce using rule 13 (statement_)


state 53

   31 expression: expression OROP . relation

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    relation  go to state 69
    term      go to state 30
    factor    go to state 31
    exponent  go to state 32
    primary   go to state 33


state 54

   30 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    relation  go to state 70
    term      go to state 30
    factor    go to state 31
    exponent  go to state 32
    primary   go to state 33


state 55

   33 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    term      go to state 71
    factor    go to state 31
    exponent  go to state 32
    primary   go to state 33


state 56

   35 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    factor    go to state 72
    exponent  go to state 32
    primary   go to state 33


state 57

   37 factor: factor MULOP . primary

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    primary  go to state 73


state 58

   40 exponent: factor EXPOP . primary

    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    primary  go to state 74


state 59

   38 factor: factor REMOP .

    $default  reduce using rule 38 (factor)


state 60

    8 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 8 (parameter)


state 61

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


state 62

    5 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 75
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 63

   25 operator: MULOP REMOP .

    $default  reduce using rule 25 (operator)


state 64

   16 statement: REDUCE operator reductions . ENDREDUCE
   19 reductions: reductions . statement_

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    ENDREDUCE     shift, and go to state 76
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 77
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 65

   18 statement: CASE expression IS . optional_cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 22 (optional_cases)

    optional_cases  go to state 78


state 66

   17 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 79
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 67

   42 primary: '(' expression ')' .

    $default  reduce using rule 42 (primary)


state 68

   12 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 12 (body)


state 69

   31 expression: expression OROP relation .
   33 relation: relation . RELOP term

    RELOP  shift, and go to state 55

    $default  reduce using rule 31 (expression)


state 70

   30 expression: expression ANDOP relation .
   33 relation: relation . RELOP term

    RELOP  shift, and go to state 55

    $default  reduce using rule 30 (expression)


state 71

   33 relation: relation RELOP term .
   35 term: term . ADDOP factor

    ADDOP  shift, and go to state 56

    $default  reduce using rule 33 (relation)


state 72

   35 term: term ADDOP factor .
   37 factor: factor . MULOP primary
   38       | factor . REMOP
   40 exponent: factor . EXPOP primary

    MULOP  shift, and go to state 57
    EXPOP  shift, and go to state 58
    REMOP  shift, and go to state 59

    $default  reduce using rule 35 (term)


state 73

   37 factor: factor MULOP primary .

    $default  reduce using rule 37 (factor)


state 74

   40 exponent: factor EXPOP primary .

    $default  reduce using rule 40 (exponent)


state 75

    5 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 5 (variable)


state 76

   16 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 16 (statement)


state 77

   19 reductions: reductions statement_ .

    $default  reduce using rule 19 (reductions)


state 78

   18 statement: CASE expression IS optional_cases . OTHERS ARROW statement_ ENDCASE
   21 optional_cases: optional_cases . case

    OTHERS  shift, and go to state 80
    WHEN    shift, and go to state 81

    case  go to state 82


state 79

   17 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 83


state 80

   18 statement: CASE expression IS optional_cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 84


state 81

   23 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 85


state 82

   21 optional_cases: optional_cases case .

    $default  reduce using rule 21 (optional_cases)


state 83

   17 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 86
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 84

   18 statement: CASE expression IS optional_cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 87
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 85

   23 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 88


state 86

   17 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 89


state 87

   18 statement: CASE expression IS optional_cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 90


state 88

   23 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 16
    IDENTIFIER    shift, and go to state 17
    INT_LITERAL   shift, and go to state 18
    REAL_LITERAL  shift, and go to state 19
    BOOL_LITERAL  shift, and go to state 20
    REDUCE        shift, and go to state 21
    CASE          shift, and go to state 22
    IF            shift, and go to state 23
    NOT           shift, and go to state 24
    '('           shift, and go to state 25

    statement_  go to state 91
    statement   go to state 27
    expression  go to state 28
    relation    go to state 29
    term        go to state 30
    factor      go to state 31
    exponent    go to state 32
    primary     go to state 33


state 89

   17 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 17 (statement)


state 90

   18 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 18 (statement)


state 91

   23 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 23 (case)
